@page "/Line_Chart"
@inject NavigationManager NavigationManager
@inject HttpClient HttpClient

<Tabs>
    <TabPane Key="1">
        <Tab>示例1</Tab>
        <ChildContent>
            <Line @ref="@chart1" Config="config1" TItem="FireworksSalesItem" />
        </ChildContent>
    </TabPane>
    <TabPane Key="2">
        <Tab>示例2</Tab>
        <ChildContent>
            <Line Data=data2 Config="config2" />
        </ChildContent>
    </TabPane>
    <TabPane Key="3">
        <Tab>示例3</Tab>
        <ChildContent>
            <Line Data=data3 Config="config3" />
        </ChildContent>
    </TabPane>
    <TabPane Key="4">
        <Tab>示例4</Tab>
        <ChildContent>
            <Line Data=data4 Config="config4" />
        </ChildContent>
    </TabPane>
    <TabPane Key="5">
        <Tab>示例5</Tab>
        <ChildContent>
            <Line  @ref="@Line5" Data=data5 Config="config5" />
        </ChildContent>
    </TabPane>
</Tabs>
@code{

    IChartComponent<FireworksSalesItem> chart1;
    IChartComponent<SalesItem> Line5;
    protected override async Task OnInitializedAsync()
    {
        var data1 = await DemoData.FireworksSalesAsync(NavigationManager, HttpClient);
        chart1.SetData(data1);
        data5 = await DemoData.SalesAsync(NavigationManager, HttpClient);
        Line5.AppendRender();

        await base.OnInitializedAsync();
    }

    #region 示例1

    LineConfig config1 = new LineConfig()
    {
        title = new Charts.Title()
        {
            visible = true,
            text = "单折线图的基础用法",
        },
        description = new Description()
        {
            visible = true,
            text = "最基础简单的折线图使用方式，显示一个指标的趋势",
        },
        forceFit = true,
        padding = "auto",
        xField = "Date",
        yField = "scales",
        xAxis = new ValueCatTimeAxis()
        {
            type = "dateTime",
            tickCount = 5,
        }
    };

    #endregion 示例1

    #region 示例2

    object[] data2 = new object[] {
        new  { year= "1991", value= 3 },
        new  { year= "1992", value= 4 },
        new  { year= "1993", value= 3.5 },
        new  { year= "1994", value= 5 },
        new  { year= "1995", value= 4.9 },
        new  { year= "1996", value= 6 },
        new  { year= "1997", value= 7 },
        new  { year= "1998", value= 9 },
        new  { year= "1999", value= 13 },
};

    LineConfig config2 = new LineConfig()
    {
        title = new Charts.Title()
        {
            visible = true,
            text = "曲线折线图",
        },
        description = new Description()
        {
            visible = true,
            text = "用平滑的曲线代替折线。",
        },
        padding = "auto",
        forceFit = true,
        xField = "year",
        yField = "value",
        smooth = true,
    };


    #endregion 示例2

    #region 示例3

    object[] data3 = new object[] {
        new  { year= "1991", value= 3 },
        new  { year= "1992", value= 4 },
        new  { year= "1993", value= 3.5 },
        new  { year= "1994", value= 5 },
        new  { year= "1995", value= 4.9 },
        new  { year= "1996", value= 6 },
        new  { year= "1997", value= 7 },
        new  { year= "1998", value= 9 },
        new  { year= "1999", value= 13 },
};

    LineConfig config3 = new LineConfig()
    {
        title = new Charts.Title()
        {
            visible = true,
            text = "带数据点的折线图",
        },
        description = new Description()
        {
            visible = true,
            text = "将折线图上的每一个数据点显示出来，作为辅助阅读。",
        },
        forceFit = true,
        padding = "auto",
        xField = "year",
        yField = "value",
        point = new LineViewConfigPoint()
        {
            visible = true,
        },
        label = new Label()
        {
            visible = true,
            type = "point",
        },
    };

    #endregion 示例3


    #region 示例4

    object[] data4 = new object[] {
        new  { year= "1991", value= 3 },
        new  { year= "1992", value= 4 },
        new  { year= "1993", value= 3.5 },
        new  { year= "1994", value= 5 },
        new  { year= "1995", value= 4.9 },
        new  { year= "1996", value= 6 },
        new  { year= "1997", value= 7 },
        new  { year= "1998", value= 9 },
        new  { year= "1999", value= 13 },
};

    LineConfig config4 = new LineConfig()
    {
        title = new Charts.Title()
        {
            visible = true,
            text = "配置折线数据点样式",
        },
        description = new Description()
        {
            visible = true,
            text = "自定义配置趋势线上数据点的样式",
        },
        padding = "auto",
        forceFit = true,
        xField = "year",
        yField = "value",
        label = new Label()
        {
            visible = true,
            type = "point",
        },
        point = new LineViewConfigPoint()
        {
            visible = true,
            size = 5,
            shape = "diamond",
            style = new GraphicStyle()
            {
                fill = "white",
                stroke = "#2593fc",
                lineWidth = 2,
            },
        },
    };

    #endregion 示例4

    #region 示例5

    SalesItem[] data5;

    LineConfig config5 = new LineConfig()
    {
        title = new Charts.Title()
        {
            visible = true,
            text = "为折线添加缩略轴交互",
        },
        description = new Description()
        {
            visible = true,
            text = "缩略轴 (slider) 交互适用于折线数据较多，用户希望关注数据集中某个特殊区间的场景。",
        },
        forceFit = true,
        padding = "auto",
        xField = "城市",
        xAxis = new ValueCatTimeAxis()
        {
            visible = true,
            label = new BaseAxisLabel()
            {
                autoHide = true,
            },
        },
        yField = "销售额",
        yAxis = new ValueAxis()
        {
            label = new BaseAxisLabel()
            {
                // 数值格式化为千分位
            },
        },
        interactions = new Interaction[] {
       new Interaction()   {
            type= "slider",
            cfg=new  {
                start= 0.1,
                end= 0.2,
            },
        },
        },
    };


    #endregion 示例5
}
