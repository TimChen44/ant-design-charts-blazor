@page "/Multiple_Line_Chart"
@inject NavigationManager NavigationManager
@inject HttpClient HttpClient

<Tabs>
    <TabPane Key="1">
        <Tab>示例1</Tab>
        <ChildContent>
            <Line Data=data1 Config="config1" />
        </ChildContent>
    </TabPane>
    <TabPane Key="2">
        <Tab>示例2</Tab>
        <ChildContent>
            <Line @ref="line2" TItem="GDPItem" Config="config2" />
        </ChildContent>
    </TabPane>
    <TabPane Key="3">
        <Tab>示例3</Tab>
        <ChildContent>
            <Line @ref="line3" TItem="EmissionsItem" Config="config3" />
        </ChildContent>
    </TabPane>
</Tabs>

@code{

    IChartComponent line2;

    IChartComponent line3;

    protected override async Task OnInitializedAsync()
    {
        var data2 = await DemoData.GDPAsync(NavigationManager, HttpClient);
        line2.SetData(data2);
        var data3 = await DemoData.EmissionsAsync(NavigationManager, HttpClient);
        line3.SetData(data3);
        await base.OnInitializedAsync();
    }


    #region 示例1

    object[] data1 = new object[] {
        new  {
    date= "2018/8/1",
    type= "download",
    value= 4623,
  },
        new  {
    date= "2018/8/1",
    type= "register",
    value= 2208,
  },
        new  {
    date= "2018/8/1",
    type= "bill",
    value= 182,
  },
        new  {
    date= "2018/8/2",
    type= "download",
    value= 6145,
  },
        new  {
    date= "2018/8/2",
    type= "register",
    value= 2016,
  },
        new  {
    date= "2018/8/2",
    type= "bill",
    value= 257,
  },
        new  {
    date= "2018/8/3",
    type= "download",
    value= 508,
  },
        new  {
    date= "2018/8/3",
    type= "register",
    value= 2916,
  },
        new  {
    date= "2018/8/3",
    type= "bill",
    value= 289,
  },
        new  {
    date= "2018/8/4",
    type= "download",
    value= 6268,
  },
        new  {
    date= "2018/8/4",
    type= "register",
    value= 4512,
  },
        new  {
    date= "2018/8/4",
    type= "bill",
    value= 428,
  },
        new  {
    date= "2018/8/5",
    type= "download",
    value= 6411,
  },
        new  {
    date= "2018/8/5",
    type= "register",
    value= 8281,
  },
        new  {
    date= "2018/8/5",
    type= "bill",
    value= 619,
  },
        new  {
    date= "2018/8/6",
    type= "download",
    value= 1890,
  },
        new  {
    date= "2018/8/6",
    type= "register",
    value= 2008,
  },
        new  {
    date= "2018/8/6",
    type= "bill",
    value= 87,
  },
        new  {
    date= "2018/8/7",
    type= "download",
    value= 4251,
  },
        new  {
    date= "2018/8/7",
    type= "register",
    value= 1963,
  },
        new  {
    date= "2018/8/7",
    type= "bill",
    value= 706,
  },
        new  {
    date= "2018/8/8",
    type= "download",
    value= 2978,
  },
        new  {
    date= "2018/8/8",
    type= "register",
    value= 2367,
  },
        new  {
    date= "2018/8/8",
    type= "bill",
    value= 387,
  },
        new  {
    date= "2018/8/9",
    type= "download",
    value= 3880,
  },
        new  {
    date= "2018/8/9",
    type= "register",
    value= 2956,
  },
        new  {
    date= "2018/8/9",
    type= "bill",
    value= 488,
  },
        new  {
    date= "2018/8/10",
    type= "download",
    value= 3606,
  },
        new  {
    date= "2018/8/10",
    type= "register",
    value= 678,
  },
        new  {
    date= "2018/8/10",
    type= "bill",
    value= 507,
  },
        new  {
    date= "2018/8/11",
    type= "download",
    value= 4311,
  },
        new  {
    date= "2018/8/11",
    type= "register",
    value= 3188,
  },
        new  {
    date= "2018/8/11",
    type= "bill",
    value= 548,
  },
        new  {
    date= "2018/8/12",
    type= "download",
    value= 4116,
  },
        new  {
    date= "2018/8/12",
    type= "register",
    value= 3491,
  },
        new  {
    date= "2018/8/12",
    type= "bill",
    value= 456,
  },
        new  {
    date= "2018/8/13",
    type= "download",
    value= 6419,
  },
        new  {
    date= "2018/8/13",
    type= "register",
    value= 2852,
  },
        new  {
    date= "2018/8/13",
    type= "bill",
    value= 689,
  },
        new  {
    date= "2018/8/14",
    type= "download",
    value= 1643,
  },
        new  {
    date= "2018/8/14",
    type= "register",
    value= 4788,
  },
        new  {
    date= "2018/8/14",
    type= "bill",
    value= 280,
  },
        new  {
    date= "2018/8/15",
    type= "download",
    value= 445,
  },
        new  {
    date= "2018/8/15",
    type= "register",
    value= 4319,
  },
        new  {
    date= "2018/8/15",
    type= "bill",
    value= 176,
  },
};

    LineConfig config1 = new LineConfig()
    {
        title = new Charts.Title()
        {
            visible = true,
            text = "多折线图",
        },
        description = new Description()
        {
            visible = true,
            text = "将数据按照某一字段进行分组，用于比对不同类型数据的趋势。",
        },
        padding = "auto",
        forceFit = true,
        xField = "date",
        yField = "value",
        yAxis = new ValueAxis()
        {
            label = new BaseAxisLabel()
            {
                // 数值格式化为千分位
            },
        },
        legend = new Legend()
        {
            position = "right-top",
        },
        seriesField = "type",
        @*responsive = true,*@
    };


    #endregion 示例1

    #region 示例2


    LineConfig config2 = new LineConfig()
    {
        title = new Charts.Title()
        {
            visible = true,
            text = "2000 ~ 2018 年各国家 GDP 趋势对比",
        },
        description = new Description()
        {
            visible = true,
            text = "图形标签 (label) 位于折线尾部，用于标注整根折线，并有带有排名的含义在其中。",
        },
        padding = "auto",//new[] { 20, 100, 30, 80 },
        forceFit = true,
        xField = "year",
        yField = "gdp",
        seriesField = "name",
        xAxis = new ValueCatTimeAxis()
        {
            type = "dateTime",
            label = new BaseAxisLabel()
            {
                visible = true,
                autoHide = true,
            },
        },
        yAxis = new ValueAxis()
        {

        },
        legend = new Legend()
        {
            visible = false,
        },
        label = new Label()
        {
            visible = true,
            type = "line",
        },
        animation = new Animation()
        {
            appear = new AnimationCfg()
            {
                animation = "clipingWithData",
            },
        },
        smooth = true,

    };

    #endregion 示例2

    #region 示例2

    LineConfig config3 = new LineConfig()
    {
        title = new Charts.Title()
        {
            visible = true,
            text = "The causes of CO2 emissions",
        },
        padding = "auto",
        forceFit = true,
        xField = "year",
        yField = "value",
        seriesField = "category",
        xAxis = new ValueCatTimeAxis()
        {
            type = "time",
        },
        yAxis = new ValueAxis()
        {
            label = new BaseAxisLabel()
            {
                // 数值格式化为千分位
            },
        },
        @*responsive = true,*@
    };

    #endregion 示例2

}
